head	1.1;
access;
symbols;
locks
	root:1.1; strict;
comment	@ * @;


1.1
date	2017.07.07.20.36.47;	author root;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#include "headers.h"
#include "prototypes.h"


void *requestProcess(void *arg)
{
        int ret=0;
        char buf[20];
        int socket_fd = *(int*)arg;
        memset(buf,0,sizeof(buf));
        printf("\t\t Server Read on block\n");
        //pthread_mutex_lock(&lock);
        read(socket_fd,&buf,10);
        printf("\t\t\t Read: %d %c %d\n",buf[0],buf[1], buf[2]);
        switch(buf[1]) 
        {
                case '+':
                        buf[3] = addition(buf[0],buf[2]);
                        break; 
                case '-':
                        buf[3] = subtract(buf[0],buf[2]);
                        break; 
                case '*':
                        buf[3] = multiply(buf[0],buf[2]);
                        break; 
                default: 
                        printf("\t\t !! Wrong request\n");
                        break;
        }               
        ret = write(socket_fd,&buf[3],1);
        close(socket_fd);
        free(arg);
        //pthread_mutex_unlock(&lock);
}
int addition(int x, int y)
{
        int result=0;
        result = x + y;
return result; 
}
int multiply(int x, int y)
{
        int result = 0;
        result = x * y;
return result; 
}
int subtract(int x, int y)
{
        int result=0;
        result =  x - y;
return result; 
}
  
@
